name: Verify

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]
  workflow_call:
  workflow_dispatch:

jobs:

  verify:
    runs-on: ubuntu-latest
    needs:
      - build
      - examples
      - fmt
      - lint
      - test
      - test-node-runtime-fixtures
    steps:
      - run: echo "We're gonna face it"

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: rustup install stable
      - name: cargo build
        run: cargo build --all-features --release --workspace

  examples:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: rustup install stable
      - name: cargo build
        run: |
          cargo run --example build_fn
          cargo run --example parse_fn
        working-directory: fn_build

  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: rustup install stable
      - name: cargo fmt
        run: cargo fmt --all -v
      - run: git diff --exit-code

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: rustup install stable
      - run: cargo clippy --all -- -D warnings
        if: github.ref == 'refs/heads/main'
      - run: cargo clippy --all
        if: github.ref != 'refs/heads/main'
        continue-on-error: true

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: rustup install stable
      - name: cargo test
        run: cargo test --workspace

  test-node-runtime-fixtures:
    runs-on: ${{ matrix.runs_on }}
    continue-on-error: true
    strategy:
      matrix:
        node_version: [18, 20, 22, 23]
        runs_on: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version }}
      - run: rustup install stable
      - name: cargo test
        run: cargo test -p l3_fn_build testing::test_node_fixtures
